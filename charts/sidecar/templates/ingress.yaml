---
{{- if and .Values.sidecar.service.enabled .Values.sidecar.ingress.grpc.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Release.Namespace }}
  name: grpc-ingress-{{ include "sidecar.name" . }}
  annotations:
    alb.ingress.kubernetes.io/backend-protocol-version: GRPC
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: "/eigenlayer.sidecar.health.v1.Health/HealthCheck"
    alb.ingress.kubernetes.io/healthcheck-port: '{{ index .Values.sidecar.ports 0 "targetPort" }}'
    alb.ingress.kubernetes.io/success-codes: '0'
    alb.ingress.kubernetes.io/group.name: grpc-{{ include "sidecar.name" . }}-{{ .Release.Namespace }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.sidecar.ingress.grpc.hostname }}
spec:
  ingressClassName: alb
  tls:
  - hosts:
    - {{ .Values.sidecar.ingress.grpc.hostname }}
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "sidecar.name" . }}
            port:
              number: {{ index .Values.sidecar.ports 0 "targetPort" }}
{{- end}}
---
{{- if and .Values.sidecar.service.enabled .Values.sidecar.ingress.http.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Release.Namespace }}
  name: http-ingress-{{ include "sidecar.name" . }}
  annotations:
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: "/v1/health"
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/group.name: http-{{ include "sidecar.name" . }}-{{ .Release.Namespace }}
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.sidecar.ingress.grpc.hostname }}
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=200
spec:
  ingressClassName: alb
  tls:
    - hosts:
        - {{ template "rewardsServiceHostNameJson" . }}
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.service.name }}
                port:
                  number: {{ index .Values.service.ports 1 "targetPort" }}
{{- end}}
